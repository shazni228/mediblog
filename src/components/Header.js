import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { useAuth } from '../contexts/AuthContext';
import { useUserRole } from '../hooks/useUserRole';
import { Stethoscope, LogIn, LogOut, User, LayoutDashboard, Key, Menu, X } from 'lucide-react';
export function Header() {
    const { user, signOut } = useAuth();
    const { canWrite, role } = useUserRole();
    const navigate = useNavigate();
    const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);
    const handleSignOut = async () => {
        try {
            await signOut();
            navigate('/');
        }
        catch (error) {
            console.error('Error signing out:', error);
        }
    };
    const closeMobileMenu = () => {
        setIsMobileMenuOpen(false);
    };
    return (_jsx("header", { className: "bg-white shadow-lg border-b-2 border-blue-100", children: _jsxs("div", { className: "max-w-7xl mx-auto px-4 sm:px-6 lg:px-8", children: [_jsxs("div", { className: "flex justify-between items-center h-16", children: [_jsxs("div", { className: "flex items-center space-x-3", children: [_jsx(Stethoscope, { className: "h-8 w-8 text-blue-600" }), _jsx(Link, { to: "/", className: "text-2xl font-bold text-blue-900 hover:text-blue-700 transition-colors", children: "MediBlog" })] }), _jsxs("nav", { className: "hidden md:flex space-x-8", children: [_jsx(Link, { to: "/", className: "text-gray-700 hover:text-blue-600 font-medium transition-colors duration-200", children: "Home" }), _jsx(Link, { to: "/about", className: "text-gray-700 hover:text-blue-600 font-medium transition-colors duration-200", children: "About" }), _jsx(Link, { to: "/contact", className: "text-gray-700 hover:text-blue-600 font-medium transition-colors duration-200", children: "Contact" }), canWrite ? (_jsxs(Link, { to: "/dashboard", className: "flex items-center space-x-2 text-gray-700 hover:text-blue-600 font-medium transition-colors duration-200", children: [_jsx(LayoutDashboard, { size: 18 }), _jsx("span", { children: "Dashboard" })] })) : user ? (_jsxs(Link, { to: "/get-access", className: "flex items-center space-x-2 text-gray-700 hover:text-blue-600 font-medium transition-colors duration-200", children: [_jsx(Key, { size: 18 }), _jsx("span", { children: "Get Access" })] })) : null] }), _jsx("div", { className: "hidden md:flex items-center space-x-4", children: user ? (_jsxs("div", { className: "flex items-center space-x-4", children: [_jsxs("div", { className: "flex items-center space-x-2 text-gray-700", children: [_jsx(User, { size: 18, className: "text-blue-600" }), _jsxs("div", { className: "text-sm", children: [_jsx("div", { className: "font-medium", children: user.email }), role && (_jsx("div", { className: "text-xs text-blue-600 capitalize", children: role }))] })] }), _jsxs("button", { onClick: handleSignOut, className: "flex items-center space-x-2 bg-red-50 text-red-700 px-4 py-2 rounded-lg hover:bg-red-100 transition-colors duration-200", children: [_jsx(LogOut, { size: 18 }), _jsx("span", { children: "Sign Out" })] })] })) : (_jsxs(Link, { to: "/login", className: "flex items-center space-x-2 bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors duration-200", children: [_jsx(LogIn, { size: 18 }), _jsx("span", { children: "Login" })] })) }), _jsx("div", { className: "md:hidden", children: _jsx("button", { onClick: () => setIsMobileMenuOpen(!isMobileMenuOpen), className: "text-gray-700 hover:text-blue-600 transition-colors", children: isMobileMenuOpen ? _jsx(X, { size: 24 }) : _jsx(Menu, { size: 24 }) }) })] }), isMobileMenuOpen && (_jsx("div", { className: "md:hidden border-t border-gray-200 py-4", children: _jsxs("div", { className: "flex flex-col space-y-4", children: [_jsx(Link, { to: "/", onClick: closeMobileMenu, className: "text-gray-700 hover:text-blue-600 font-medium transition-colors duration-200 px-2 py-1", children: "Home" }), _jsx(Link, { to: "/about", onClick: closeMobileMenu, className: "text-gray-700 hover:text-blue-600 font-medium transition-colors duration-200 px-2 py-1", children: "About" }), _jsx(Link, { to: "/contact", onClick: closeMobileMenu, className: "text-gray-700 hover:text-blue-600 font-medium transition-colors duration-200 px-2 py-1", children: "Contact" }), canWrite ? (_jsxs(Link, { to: "/dashboard", onClick: closeMobileMenu, className: "flex items-center space-x-2 text-gray-700 hover:text-blue-600 font-medium transition-colors duration-200 px-2 py-1", children: [_jsx(LayoutDashboard, { size: 18 }), _jsx("span", { children: "Dashboard" })] })) : user ? (_jsxs(Link, { to: "/get-access", onClick: closeMobileMenu, className: "flex items-center space-x-2 text-gray-700 hover:text-blue-600 font-medium transition-colors duration-200 px-2 py-1", children: [_jsx(Key, { size: 18 }), _jsx("span", { children: "Get Access" })] })) : null, user ? (_jsxs("div", { className: "border-t border-gray-200 pt-4 mt-4", children: [_jsxs("div", { className: "flex items-center space-x-2 text-gray-700 px-2 py-1 mb-3", children: [_jsx(User, { size: 18, className: "text-blue-600" }), _jsxs("div", { className: "text-sm", children: [_jsx("div", { className: "font-medium", children: user.email }), role && (_jsx("div", { className: "text-xs text-blue-600 capitalize", children: role }))] })] }), _jsxs("button", { onClick: () => {
                                            handleSignOut();
                                            closeMobileMenu();
                                        }, className: "flex items-center space-x-2 bg-red-50 text-red-700 px-4 py-2 rounded-lg hover:bg-red-100 transition-colors duration-200 w-full", children: [_jsx(LogOut, { size: 18 }), _jsx("span", { children: "Sign Out" })] })] })) : (_jsx("div", { className: "border-t border-gray-200 pt-4 mt-4", children: _jsxs(Link, { to: "/login", onClick: closeMobileMenu, className: "flex items-center space-x-2 bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors duration-200 w-full", children: [_jsx(LogIn, { size: 18 }), _jsx("span", { children: "Login" })] }) }))] }) }))] }) }));
}
